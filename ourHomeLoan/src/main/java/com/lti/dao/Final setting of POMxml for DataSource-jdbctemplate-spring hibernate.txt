<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- load annotated beans -->
    <context:component-scan base-package="com.lti.component" />
    
    <!-- jdbcTemplate uses dataSource -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- this bean will create the EntityManagerFactory & EntityManager object
	with this entry, we can simply inject the EntityManager obj in any class we need using @PersistenceContext annotation.
	we don't need a separate META-INF/persistence.xml now, all the settings required for setting up an ORM can be done with this bean definition itself -->
	<bean id="myEmf" 
     class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" /> <!-- datasource/database we want to use -->
    <property name="packagesToScan" value="com.lti.component" /> <!-- location of @Entity classes -->
    <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
    </property>
    <property name="jpaProperties">
        <props>
           <!-- <prop key="hibernate.hbm2ddl.auto">validate</prop> --> 
            <prop key="hibernate.show_sql">true</prop>
        </props>
    </property>
</bean>
    
    <bean id = "dataSource" class = "org.apache.commons.dbcp2.BasicDataSource">
   <property name = "driverClassName" value = "oracle.jdbc.OracleDriver"/>
   <property name = "url" value = "jdbc:oracle:thin:@localhost:1521:orcl"/>
   <property name = "username" value = "hr"/>
   <property name = "password" value = "Jayanta123"/>
   <property name="initialSize" value = "2" />
</bean>

<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="myEmf" />
</bean>
<tx:annotation-driven />

</beans>